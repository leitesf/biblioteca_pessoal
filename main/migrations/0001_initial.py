# Generated by Django 4.1.7 on 2023-03-29 18:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import isbn_field.fields
import isbn_field.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contato', models.CharField(max_length=100, verbose_name='Contato')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('nome_ordenado', models.CharField(max_length=100, verbose_name='Nome Ordenado')),
                ('nacionalidade', django_countries.fields.CountryField(max_length=2, null=True, verbose_name='Nacionalidade')),
                ('pseudonimo_de', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pseudonimos', to='main.autor')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Colecao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Coleção')),
                ('nome_para_ordenacao', models.CharField(max_length=30, verbose_name='Nome para Ordenação')),
                ('prioridade_na_ordenacao', models.BooleanField(default=False, help_text='Caso ativado, irá agrupar os livros dessa coleção na ordem da prateleira no lugar do autor.', verbose_name='Prioritário na ordenação')),
            ],
            options={
                'verbose_name': 'Coleção',
                'verbose_name_plural': 'Coleções',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Editora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Editora',
                'verbose_name_plural': 'Editoras',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Estante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
                ('comodo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cômodo')),
            ],
            options={
                'verbose_name': 'Estante',
                'verbose_name_plural': 'Estantes',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Idioma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Idioma',
                'verbose_name_plural': 'Idiomas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Livro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Titulo')),
                ('isbn', isbn_field.fields.ISBNField(blank=True, max_length=28, validators=[isbn_field.validators.ISBNValidator], verbose_name='ISBN')),
                ('sinopse', models.TextField(blank=True, verbose_name='Sinopse')),
                ('paginas', models.IntegerField(blank=True, null=True, verbose_name='Páginas')),
                ('subtitulo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Subtítulo')),
                ('ano', models.IntegerField(blank=True, null=True, verbose_name='Ano de Publicação')),
                ('skoob_id', models.IntegerField(blank=True, null=True, verbose_name='ID no Skoob')),
                ('autor_principal', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='livros_como_principal', to='main.autor', verbose_name='Autor Principal')),
                ('autores_secundarios', models.ManyToManyField(related_name='livros_como_secundario', to='main.autor', verbose_name='Autores Secundários')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.categoria', verbose_name='Categoria')),
                ('colecao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.colecao', verbose_name='Coleção')),
                ('editora', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.editora', verbose_name='Editora')),
                ('estante', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.estante', verbose_name='Estante')),
                ('idioma', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.idioma', verbose_name='Idioma')),
            ],
            options={
                'verbose_name': 'Livro',
                'verbose_name_plural': 'Livros',
                'ordering': ['autor_principal__nome_ordenado', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='Leitura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data de Leitura')),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.livro')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
    ]
